{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-03-28T17:40:15.104Z",
    "end": "2023-03-28T17:40:30.980Z",
    "duration": 15876,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "357f43e8-c1ee-4311-9ef9-d600e231fa46",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48814cba-d28c-462c-a1e4-1789bb71ac5e",
          "title": "add todo tests",
          "fullFile": "D:\\seleniumDemo\\test\\framework_learn.js",
          "file": "\\test\\framework_learn.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 9471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launching the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\nlet inputString = \"Learn Cypress for E2E Testing\";\n//navigate to the todo app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app\");\n//locate the input field and add a todo\n//*[@id=\"sampletodotext\"]\n\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(inputString, Key.ENTER);\n//assertion using chai\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){return value});\ntodoText.should.equal(inputString);\n    \n// await driver.findElement(By.id())\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "74608664-37c5-4ea6-a34e-c5abf13f749f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74608664-37c5-4ea6-a34e-c5abf13f749f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9471,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "40d9bb16-c09b-4b36-bd99-40596733ed9c",
          "title": "add todo tests",
          "fullFile": "D:\\seleniumDemo\\test\\framework_2.js",
          "file": "\\test\\framework_2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add todo tests successfully adds another todo to application",
              "timedOut": null,
              "duration": 10185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launching the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\nlet inputString = \"Learn Cypress for E2E Testing\";\n//navigate to the todo app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app\");\n//locate the input field and add a todo\n//*[@id=\"sampletodotext\"]\n\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(inputString, Key.ENTER);\n//assertion using chai\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){return value});\ntodoText.should.equal(inputString);\n    \n// await driver.findElement(By.id())\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "8748e924-fc53-482e-8a10-8d03120f3661",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add todo tests successfully adds another todo to application",
              "timedOut": null,
              "duration": 5150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//launching the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\nlet inputString = \"This will fail. I only want to see what a failure report looks like\";\n//navigate to the todo app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app\");\n//locate the input field and add a todo\n//*[@id=\"sampletodotext\"]\n\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Hey there! It's been a good day!\", Key.ENTER);\n//assertion using chai\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){return value});\ntodoText.should.equal(inputString);\n    \n// await driver.findElement(By.id())\n//close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Hey there! It\\'s been a good day!' to equal 'This will fail. I only want to see wh…'",
                "estack": "AssertionError: expected 'Hey there! It\\'s been a good day!' to equal 'This will fail. I only want to see wh…'\n    at Context.<anonymous> (test\\framework_2.js:45:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Hey there! It's been a good day!\n+ This will fail. I only want to see what a failure report looks like\n"
              },
              "uuid": "1ed40133-8a34-4993-9619-ac2bf9fa1d48",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8748e924-fc53-482e-8a10-8d03120f3661"
          ],
          "failures": [
            "1ed40133-8a34-4993-9619-ac2bf9fa1d48"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15335,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reportFile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "myReport",
        "reportFilename": "reportFile"
      },
      "version": "6.2.0"
    }
  }
}